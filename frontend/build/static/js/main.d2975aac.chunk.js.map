{"version":3,"sources":["images/yellow-piece.png","images/red-piece.png","containers/SignIn.js","containers/SignUp.js","containers/Matching.js","components/result.js","images/can2.svg","images/black.svg","images/white.svg","images/frame.png","images/red.jpg","images/yellow.jpg","images/hint.jpg","components/Grid1x1.js","components/board.js","images/face.svg","components/user.js","components/QuitButtons.js","containers/MainGame.js","hooks/useGame.js","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","SignIn","props","classes","useState","email","setEmail","password","setPassword","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","style","src","redpiece","yellowpiece","data-text","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","Button","onClick","pressSignIn","pressSignUp","Box","mt","SignUp","firstName","setFirstName","lastName","setLastName","Container","maxWidth","Avatar","pressRegister","justify","pressBackToSignIn","Matching","pressCancel","Result","player","gameResult","pressLogout","pressrestart","Grid1x1","row_index","col_index","handle_1x1_click","bind","this","username","red","yellow","Can","frame","renderSwitch","Board","grids","Array","i","j","push","board","map","row","User","userstyle","turn","namestyle","connected","fontSize","stats","history","winPercentage","face","Math","floor","timeleft","min","sec","ms","toString","padStart","computeTimeleft","QuitButtons","clicked","setClicked","pressResign","size","endIcon","Icon","console","log","MainGame","gameHooks","timeLeft","timeLeft1","opponent","gameState","gameButtons","pressRestart","rel","server","WebSocket","onopen","sendEvent","send","JSON","stringify","initialTime","initboard","useBoard","useCountDown","actions","actions1","setBoard","setTurn","setPlayer","setOpponent","status","setStatus","setGameResult","content","setGameState","prejudge","col","last","onmessage","m","data","onEvent","parse","timeout","player1","a","useEffect","start","pause","args","fullName","alert","client","clients","new_game","players","white","win","lost","tie","black","end_game","winner","user","place","App","useGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2975aac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/yellow-piece.85d952a6.png\";","export default __webpack_public_path__ + \"static/media/red-piece.910d2d13.png\";","import React from 'react';\r\nimport {useState} from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport yellowpiece from \"../images/yellow-piece.png\";\r\nimport redpiece from \"../images/red-piece.png\";\r\nimport '../style.css'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        WP1092\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://i.imgur.com/PlzSr1p.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail]=useState('')\r\n  const [password,setPassword]=useState('')\r\n  \r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square style={{backgroundColor : \"#37bcff4d\"}}>\r\n        <div className={classes.paper}>\r\n          <div className='signin-title-top'>\r\n              <h2 className='signin-text-top'>C</h2>\r\n              <img className=\"signin-title-image\" src={redpiece}></img>\r\n              <h2 className='signin-text-top'>nnect</h2>\r\n            </div>\r\n            <div className='signin-title-middle'>\r\n              <h2 className='signin-text-middle'>F</h2>\r\n              <img className=\"signin-title-image\" src={yellowpiece}></img>\r\n              <h2 className='signin-text-middle' data-text=\"UR\" style={{color:\"white\"}}>ur</h2>\r\n            </div>\r\n            <div className='signin-title-bottom'>\r\n              <img className=\"signin-title-image\" src={redpiece}></img>\r\n              <h2 className='signin-text-bottom'>nline</h2>\r\n            </div>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"button\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={()=>{\r\n                props.pressSignIn(({password:password,email:email}))\r\n              }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\" onClick={props.pressSignUp}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport { useState } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        WP1092\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n\r\n  const [firstName, setFirstName]=useState('')\r\n  const [lastName,setLastName]=useState('')\r\n  const [email, setEmail]=useState('')\r\n  const [password,setPassword]=useState('')\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={()=>{props.pressRegister(({firstName:firstName,lastName:lastName,email:email,password:password}))}}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\" onClick={props.pressBackToSignIn}>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport './matching.css'\r\n\r\n\r\nfunction Matching(props){\r\n    return(\r\n    <div className=\"matching-body\">\r\n        <div>\r\n          <h2 className=\"matching-h2\" data-text=\"Matchmaking...\">Matchmaking...</h2>\r\n        </div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={props.pressCancel}>Cancel</Button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Matching","import {useState} from 'react'\r\nimport \"./../style.css\"\r\n\r\nfunction Result(props){\r\n    const {player, gameResult, pressLogout, pressrestart} = props\r\n\r\n    return (\r\n        <div className=\"endgame-layout\">\r\n            <div className=\"grid\">\r\n                <div className=\"heading heading--stroke-shadow\">\r\n                    {gameResult[0]==='tie'?\"DRAW\":(gameResult[0]===player[1]?\"VICTORY\":\"DEFEAT\")}\r\n                </div>\r\n            </div>\r\n            <div className=\"endgame-buttons\">\r\n              <button className=\"endgame-newgame\" data-text=\"NEW GAME\" onClick={()=>{pressrestart({player:player[0]})}}>\r\n                New game\r\n              </button>\r\n              <button className=\"endgame-logout\" data-text=\"VERSUS\" onClick={()=>{pressLogout({player:player[0]})}}>\r\n                Logout\r\n              </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result","export default __webpack_public_path__ + \"static/media/can2.a9056786.svg\";","export default __webpack_public_path__ + \"static/media/black.5f4bd283.svg\";","export default __webpack_public_path__ + \"static/media/white.d55bb7e0.svg\";","export default __webpack_public_path__ + \"static/media/frame.84c34445.png\";","export default __webpack_public_path__ + \"static/media/red.60926260.jpg\";","export default __webpack_public_path__ + \"static/media/yellow.92708a58.jpg\";","export default __webpack_public_path__ + \"static/media/hint.32c5238c.jpg\";","// import { useState } from 'react'\r\nimport './../style.css'\r\nimport Black from \"../images/black.svg\";\r\nimport White from \"../images/white.svg\";\r\nimport Can from \"../images/can2.svg\";\r\nimport frame from \"../images/frame.png\";\r\nimport red from \"../images/red.jpg\";\r\nimport yellow from \"../images/yellow.jpg\";\r\nimport hint from \"../images/hint.jpg\";\r\n\r\nfunction Grid1x1(props){\r\n    const renderSwitch=(value)=>{\r\n        switch(value){\r\n            case 'w': return (<img className=\"piece\" src={red}/>)\r\n            case 'b': return (<img className=\"piece\" src={yellow}/>)\r\n            case 'c': return (<img className=\"hint piece\" src={Can} />)\r\n            case 'e': return (<img className=\"piece\" src={frame} />)\r\n            default: return (<img/>)\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"Grid1x1\" id={`${props.row_index}_${props.col_index}`}\r\n            onClick={props.handle_1x1_click.bind(this, props.row_index, props.col_index, props.username)}>\r\n            {renderSwitch(props.value)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid1x1","// import { useState } from 'react'\r\nimport './../style.css'\r\nimport Grid1x1 from './Grid1x1'\r\n\r\nfunction Board(props){\r\n    var grids=new Array(7)\r\n    for(var i=0; i<7; i++)\r\n    {\r\n      grids[i]=[]\r\n      for(var j=0; j<6; j++){\r\n        grids[i].push(\r\n          <Grid1x1  \r\n            row_index={j} \r\n            col_index={i}\r\n            username={props.username}\r\n            handle_1x1_click={props.handle_1x1_click}\r\n            value={props.board[i][j]}\r\n          />\r\n        )\r\n      }\r\n    }\r\n    return (\r\n        <div className=\"board\">\r\n          {grids.map((row)=>{\r\n            return<div className=\"row\">{row}</div>\r\n          })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board","export default __webpack_public_path__ + \"static/media/face.7e8e935f.svg\";","import {useState} from 'react'\r\nimport './../style.css'\r\nimport Black from \"../images/black.svg\";\r\nimport White from \"../images/white.svg\";\r\nimport face from \"../images/face.svg\";\r\nimport yellowpiece from \"../images/yellow-piece.png\";\r\nimport redpiece from \"../images/red-piece.png\";\r\n\r\nfunction User(props){\r\n    const userstyle={\r\n        color :(props.color === props.turn) ? \"white\" : \"#C8C8C8\"\r\n    }\r\n\r\n    const occupationstyle={\r\n        fontWeight: 600,\r\n        color: props.connected? \"black\": \"red\"\r\n    }\r\n\r\n    const namestyle={\r\n        fontSize: \"30px\",\r\n        color: props.connected? \"white\": \"red\"\r\n    }\r\n\r\n    //Todo : Add player stats\r\n    //console.log(props.history)\r\n    const stats = props.history // Won/Lost\r\n    const winPercentage = ((stats[0] + stats[1]+stats[2])!==0)?(stats[0] / (stats[0] + stats[1]+stats[2]))*100:0\r\n\r\n    const computeTimeleft=()=>{\r\n        if (props.timeleft === 'xx') return ''\r\n        else if (props.timeleft<0) return \" 0:00\"\r\n        //console.log(props.timeleft)\r\n        let min=Math.floor(props.timeleft/60000)\r\n        let sec=Math.floor((props.timeleft/1000)%60)\r\n        let ms=Math.floor((props.timeleft/10)%100)\r\n        \r\n        if (min<1) return (sec.toString().padStart(2,\"0\")+'.'+ ms.toString().padStart(2,\"0\"))\r\n        else return (min.toString().padStart(2,\" \") +':'+sec.toString().padStart(2,\"0\"))\r\n    }\r\n\r\n    return(\r\n        <div className=\"User\">\r\n            <div className=\"card-left\">\r\n                <div className=\"card-avatar\">\r\n                    <img className=\"face\" src={face}/>\r\n                </div>\r\n                <div className=\"card-stats\">\r\n                    W: {stats[0]}/ L: {stats[1]}/ Tie: {stats[2]}\r\n                </div>\r\n                <div className=\"card-stats\">\r\n                    WIN RATE : {Math.floor(winPercentage)}%\r\n                </div>\r\n            </div>\r\n            <div className=\"card-right\">\r\n                <div className=\"turn\" style={userstyle}> It's {props.color===props.turn? \"your\" : \"opponent's\"} turn!</div>\r\n                <div className=\"card-name\" style={namestyle}>{props.player}</div>\r\n                \r\n                <div className=\"card-details\">\r\n                    <div className=\"card-details piece\">\r\n                        {props.color==='b'? (<img className=\"card-details piece\" src={yellowpiece}/>):(<img className=\"card-details piece\" src={redpiece}/>)}\r\n                    </div>\r\n                    <div className=\"card-details data\">\r\n                        <div className=\"item\">\r\n                            <span className=\"value\">{computeTimeleft()}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst QuitButtons = (props) => {\r\n    const [clicked, setClicked] = useState(false)\r\n    const {player,pressResign} = props\r\n    if(!clicked)\r\n    {\r\n        return(\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    endIcon={<Icon>send</Icon>}\r\n                    onClick={() => {\r\n                        console.log(\"Pressed quit\")\r\n                        setClicked(true)\r\n                    }}\r\n                 >\r\n                    Quit\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return(\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={() => {\r\n                        setClicked(false)\r\n                    }}\r\n                >\r\n                Cancel\r\n                </Button>\r\n                <Button\r\n                    type=\"button\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    onClick={() => {\r\n                        setClicked(false)\r\n                        pressResign(player)\r\n                    }}\r\n                >\r\n                    Confirm\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuitButtons","import { useState, useEffect } from 'react'\r\nimport Result from '../components/result'\r\nimport Board from '../components/board' \r\nimport User from '../components/user'\r\nimport QuitButtons from '../components/QuitButtons'\r\nimport './maingame.css'\r\n\r\n\r\n\r\nfunction MainGame(props){\r\n    const [player, timeLeft,timeLeft1, turn, opponent, board, gameResult, gameState, handle_1x1_click] = props.gameHooks\r\n    const [pressResign, pressLogout, pressRestart] = props.gameButtons\r\n\r\n    \r\n    //console.log(player, opponent, turn)\r\n    return( \r\n        <div className=\"game\">\r\n            <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n            <div className=\"left\">\r\n                <div className=\"quit\">\r\n                    {gameState===\"playing\" ? <QuitButtons pressResign={pressResign} player={player}></QuitButtons> : <p></p>}\r\n                </div>\r\n                <User \r\n                    color={player[1]}\r\n                    player={player[0]}\r\n                    timeleft={ timeLeft}\r\n                    connected={player[2]}\r\n                    turn={turn}\r\n                    history = {player[3]}/>\r\n                <div className=\"vs\">\r\n                    <div className=\"vs-text\" data-text=\"VERSUS\">VERSUS</div>\r\n                </div>\r\n                <User \r\n                    color={opponent[1]}\r\n                    player={opponent[0]}\r\n                    connected={opponent[2]}\r\n                    timeleft={timeLeft1}\r\n                    turn={turn}\r\n                    history = {opponent[3]}/>\r\n            </div>\r\n\r\n            <div className=\"right\">\r\n                {\r\n                gameState===\"playing\"?\r\n                    <Board \r\n                        handle_1x1_click={handle_1x1_click}\r\n                        board={board}\r\n                        username={player[0]}/>:\r\n                    <Result\r\n                        player={player}\r\n                        gameResult={gameResult}\r\n                        pressLogout={pressLogout}\r\n                        pressrestart={pressRestart}\r\n                    />\r\n                }\r\n            </div>\r\n      </div>\r\n    )\r\n\r\n    /*return (\r\n            <QuitModal\r\n                visible={false}\r\n                onConfirm={() => {\r\n                    setModalVisible(false)\r\n                }}\r\n                onCancel={() => {\r\n                    setModalVisible(false)\r\n                }}\r\n            >\r\n            </QuitModal>\r\n    )*/\r\n}\r\n\r\nexport default MainGame","import {useEffect, useState} from 'react'\r\nimport useCountDown from 'react-countdown-hook';\r\n\r\nconst server = new WebSocket('ws://localhost:4000')\r\nserver.onopen = () => console.log('Server connected2.');\r\nserver.sendEvent = function(e) {server.send(JSON.stringify(e));}\r\n\r\n\r\n\r\nconst initialTime = 10 * 1000;\r\nconst interval = 1000; \r\n\r\nlet initboard=[\r\n    ['e','e','e','e','e','e'],\r\n    ['e','e','e','e','e','e'],\r\n    ['e','e','e','e','e','e'],\r\n    ['e','e','e','e','e','e'],\r\n    ['e','e','e','e','e','e'],\r\n    ['e','e','e','e','e','e'],\r\n    ['e','e','e','e','e','e']\r\n]\r\n\r\n\r\nconst useBoard=()=>{\r\n    const [timeLeft, actions] = useCountDown(initialTime, interval);\r\n    const [timeLeft1, actions1] = useCountDown(initialTime, interval);\r\n    //const [time,setTime]=useState(0)\r\n    //const [lefttime,setLefttime]=useState(2*60*1000)\r\n    const [board, setBoard]=useState(initboard)\r\n    const [turn, setTurn]=useState('e') \r\n    const [player, setPlayer]=useState(['null','e',true,[0,0,0]]) \r\n    const [opponent, setOpponent]=useState(['null', 'e',true,[0,0,0]])\r\n    const [status, setStatus] = useState('signin')\r\n    const [gameResult, setGameResult] = useState(['',''])\r\n    const [msg,setMsg]=useState({content:\"\"})\r\n\r\n    const [gameState, setGameState] = useState('playing')\r\n    const prejudge = (col, row)=>{\r\n        if (player[1] !== turn) return null\r\n        else {\r\n            if (board[col][0] !== 'e') return null\r\n            else{\r\n                /* apply gravity */\r\n                let last = 0\r\n                while(board[col][last] === 'e' && last <= 6) last += 1\r\n                board[col][last-1] = turn\r\n                console.log(\"setting board\")\r\n                setBoard(board)\r\n            }\r\n        }\r\n    }\r\n\r\n    server.onmessage = (m) => {\r\n        console.log(server)\r\n        m = m.data\r\n        onEvent(JSON.parse(m));\r\n    };\r\n    // server.wait = function(callback, interval){\r\n    //     console.log(server.readyState)\r\n    //     if (server.readyState === 1) callback()\r\n    //     else {\r\n    //         setTimeout(function () {\r\n    //             server.wait(callback, interval);\r\n    //         }, interval);\r\n    //     }\r\n    // }\r\n    // server.sendEvent = function(e){\r\n    //     server.wait(async function (){\r\n    //         await server.send(JSON.stringify(e))\r\n    //     })\r\n    // }\r\n    const timeout = async(player1)=>{\r\n       \r\n        await server.sendEvent([\r\n            'TIMEOUT',\r\n            player1\r\n        ])\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        console.log(timeLeft)\r\n        console.log(\"IIIIIIIIIIIIIIIIIIIIIII\")\r\n        console.log(timeLeft1)\r\n        if(timeLeft===0 && status==='ingame'){\r\n            actions.start(initialTime)\r\n            actions.pause()\r\n            console.log(\"player1 lose\")\r\n            timeout(player)\r\n            \r\n        }\r\n        else if (timeLeft1===0 && status==='ingame'){\r\n            actions1.start(initialTime)\r\n            actions1.pause()\r\n            console.log(\"player2 lose\")\r\n            timeout(opponent)\r\n            \r\n        }\r\n        //console.log(lefttime)\r\n        //console.log(time, Date.now())\r\n        // const timer=setInterval(()=>{\r\n        //     setLefttime(lefttime-(Date.now()-time))\r\n        // },1000)\r\n        // return ()=>clearInterval(timer)\r\n    },)\r\n\r\n    const pressSignIn = async(args)=>{\r\n        \r\n        const email = args.email \r\n        const password = args.password\r\n        //let res = await instance.post('/login',{email:email,password:password})\r\n        server.sendEvent([\r\n            'SIGN_IN',\r\n            {email, password}\r\n        ])\r\n        \r\n        \r\n    }\r\n\r\n    const pressSignUp = ()=>{\r\n        setStatus('signup')\r\n    }\r\n\r\n    const pressBackToSignIn = ()=>{\r\n        setStatus('signin')\r\n    }\r\n    \r\n    const pressRegister = async(args)=>{\r\n        \r\n        const firstName = args.firstName\r\n        const lastName = args.lastName\r\n        const email = args.email\r\n        const password = args.password\r\n        const fullName = `${firstName} ${lastName}`\r\n        server.sendEvent([\r\n            'SIGN_UP',\r\n            { fullName, email, password}\r\n        ])\r\n        \r\n    }\r\n\r\n    const pressCancel =async()=>{\r\n        console.log(server)\r\n        server.sendEvent([\r\n            'CANCEL',\r\n            server.username\r\n        ])\r\n        setStatus('signin')\r\n    }\r\n\r\n    const onEvent = function(e) {\r\n        const [ type, data ] = e;\r\n        console.log(type, data)\r\n        // const errorDOM = document.getElementById('error');\r\n        // const boardDOM = document.getElementById('board')\r\n        // errorDOM.innerHTML = ''\r\n        switch (type) {\r\n            case 'ERROR': {\r\n                alert(data)\r\n                break;\r\n            }\r\n            case 'SIGN_UP': {\r\n                setStatus('signin')\r\n                break;\r\n            }\r\n            case 'SIGN_IN':{\r\n                const [name, email, history] = data\r\n                server.username = name\r\n                server.email = email\r\n                server.history = history\r\n                setStatus('matching')\r\n            }\r\n            case 'WAITING': {\r\n                const { client, clients } = data\r\n                console.log(client)\r\n                console.log(clients)\r\n                actions1.start()\r\n                actions1.pause()\r\n                actions.start()\r\n                actions.pause()\r\n                break\r\n            }\r\n\r\n            case 'START': {\r\n                setStatus('ingame')\r\n                const [new_game,first] = data\r\n                //console.log(new_game)\r\n                if (first === \"first\" ){\r\n                    setPlayer([new_game.players.white.name,'w',true,[new_game.players.white.history.win,new_game.players.white.history.lost,new_game.players.white.history.tie]])\r\n                    setOpponent([new_game.players.black.name,'b',true,[new_game.players.black.history.win,new_game.players.black.history.lost,new_game.players.black.history.tie]])\r\n                    actions1.start()\r\n                    actions1.pause()\r\n                    actions.start()\r\n                }\r\n                else{\r\n                    setPlayer([new_game.players.black.name,'b',true,[new_game.players.black.history.win,new_game.players.black.history.lost,new_game.players.black.history.tie]])\r\n                    setOpponent([new_game.players.white.name,'w',true,[new_game.players.white.history.win,new_game.players.white.history.lost,new_game.players.white.history.tie]])\r\n                    actions.start()\r\n                    actions.pause()\r\n                    actions1.start()\r\n                }\r\n                // const timer=setInterval(()=>{\r\n                //     setLefttime(lefttime-(Date.now()-time))\r\n                // },1000)\r\n                // return ()=>clearInterval(timer)\r\n                //setTime(Date.now)\r\n                setTurn('w')\r\n                setBoard(new_game.board)\r\n\r\n                break\r\n            }\r\n            case 'PLACE': {\r\n                const new_game = data\r\n                console.log(new_game)\r\n                //console.log(\"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\")\r\n                setTurn(new_game.turn)\r\n                setBoard(new_game.board)\r\n                \r\n                \r\n                //setTime(Date.now())\r\n                //console.log(\"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\")\r\n                //console.log((server.username === new_game.players.black.name && new_game.turn ==='b')\r\n                //||(server.username === new_game.players.white.name && new_game.turn ==='w'))\r\n                if((server.username !== new_game.players.black.name && new_game.turn ==='b')\r\n                ||(server.username !== new_game.players.white.name && new_game.turn ==='w')){\r\n                    actions.start(initialTime)\r\n                    actions.pause()\r\n                    actions1.start(initialTime)\r\n                    \r\n                }\r\n                else{\r\n                    actions1.start(initialTime)\r\n                    actions1.pause()\r\n                    actions.start(initialTime)\r\n                    \r\n                }\r\n                //actions1.resume()\r\n                \r\n                break\r\n            }\r\n            case 'END': {\r\n                const [end_game, winner] = data\r\n                console.log(end_game)\r\n                setBoard(end_game.board)\r\n                setGameState(\"end\")\r\n                setGameResult([winner, ''])\r\n                actions.start(initialTime)\r\n                actions.pause()\r\n                actions1.start(initialTime)\r\n                actions1.pause()\r\n                //actions.reset()\r\n                //actions1.reset()\r\n                break\r\n            }\r\n            case \"NEWGAME\":{\r\n                setStatus('matching')\r\n                setGameState(\"playing\")\r\n                console.log(\"server back newgame\")\r\n                \r\n                const user = data\r\n                const email = user.email \r\n                const password = user.password\r\n                console.log(email)\r\n                console.log(\"TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\")\r\n                console.log(status)\r\n                setStatus('matching')\r\n                server.sendEvent([\r\n                    'SIGN_IN',\r\n                    {email, password}\r\n                ])\r\n                console.log(\"send sign in \")\r\n            }\r\n        }\r\n        //resetInputs();\r\n  };\r\n    \r\n\r\n    const place= async(row, col, username)=>{\r\n        console.log(row, col)\r\n        \r\n        prejudge(col, row)\r\n        //if (server.username===username){\r\n        //    actions1.resume()\r\n        //    actions.resume()\r\n        // }\r\n        // else{\r\n        //    actions.resume()\r\n        //    actions1.resume()\r\n        // }\r\n        server.sendEvent([\r\n            'PLACE',\r\n            {col, row, username}\r\n        ])\r\n    }\r\n    const handle_1x1_click=(row_index, col_index, username)=>{\r\n        \r\n        place(row_index, col_index, username)\r\n        \r\n    }\r\n\r\n    const pressResign=async(player)=>{\r\n        setStatus('signin')\r\n        console.log(player)\r\n        console.log(\"PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\")\r\n        server.sendEvent([\r\n            'RESIGN',\r\n            player\r\n        ])\r\n    }\r\n\r\n    const pressLogout= async (args)=>{\r\n        \r\n        const player = args.player\r\n\r\n        server.sendEvent([\r\n            'LOGOUT',\r\n            player\r\n        ])\r\n        setStatus('signin')\r\n        setGameState(\"playing\")\r\n    }\r\n\r\n    const pressRestart=async(args)=>{\r\n        const player = args.player\r\n        console.log(\"send event newgame\")\r\n        server.sendEvent([\r\n            'NEWGAME',\r\n            player\r\n        ])\r\n        console.log(\"finish send event newgame\")\r\n        setStatus('matching')\r\n    }\r\n\r\n    let gameHooks = [player, timeLeft,timeLeft1, turn, opponent, board, gameResult, gameState, handle_1x1_click]\r\n    let gameButtons = [pressResign, pressLogout, pressRestart]\r\n\r\n    return [status, pressSignIn, pressSignUp, pressBackToSignIn, pressRegister, pressCancel, gameHooks, gameButtons]\r\n}\r\nexport default useBoard;","import './App.css'\r\nimport { useState, useEffect } from 'react'\r\nimport SignIn from \"./containers/SignIn\"\r\nimport SignUp from \"./containers/SignUp\"\r\nimport Matching from \"./containers/Matching\"\r\nimport MainGame from \"./containers/MainGame\"\r\nimport useGame from './hooks/useGame'\r\nimport WebSocket from 'ws'\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [status, pressSignIn, pressSignUp, pressBackToSignIn, pressRegister, pressCancel, gameHooks, gameButtons] = useGame();\r\n\r\n\r\n\r\n  const renderSwitch=(status)=>{\r\n    //console.log(\"Status :\", status)\r\n    switch(status){\r\n      case 'signin': return <SignIn pressSignIn={pressSignIn} pressSignUp={pressSignUp}/>;\r\n      case 'signup' : return <SignUp pressRegister={pressRegister} pressBackToSignIn={pressBackToSignIn}/>;\r\n      case 'matching' : return <Matching pressCancel={pressCancel} status={status}/>;\r\n      case 'ingame' : return <MainGame gameHooks={gameHooks} gameButtons={gameButtons}></MainGame>\r\n      default: return <div>case not handled by switch</div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Othello\">{renderSwitch(status)}</div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}