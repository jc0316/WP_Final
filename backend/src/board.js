
import Name from "./models/name";
exports.place = (col, row, game, client)=>{
    const turn = game.turn
    console.log(turn, client.username, game.players.black.name)
    if (turn === 'w' && client.username === game.players.black.name) return 'Not your turn!'
    else if(turn === 'b' && client.username === game.players.white.name) return 'Not your turn!'
    else {
        if (game.board[col][0] !== 'e') return 'This line is full!'
        else{
            /* apply gravity */
            let last = 0
            while(game.board[col][last] === 'e' && last <= 6) last += 1
            game.board[col][last-1] = turn
            /* chek game logic */
            const bingo = [
    /* in same col */
    [[0,0],[0,1],[0,2],[0,3]], [[0,1],[0,2],[0,3],[0,4]], [[0,2],[0,3],[0,4],[0,5]], [[0,3],[0,4],[0,5],[0,6]], 
    [[1,0],[1,1],[1,2],[1,3]], [[1,1],[1,2],[1,3],[1,4]], [[1,2],[1,3],[1,4],[1,5]], [[1,3],[1,4],[1,5],[1,6]], 
    [[2,0],[2,1],[2,2],[2,3]], [[2,1],[2,2],[2,3],[2,4]], [[2,2],[2,3],[2,4],[2,5]], [[2,3],[2,4],[2,5],[2,6]], 
    [[3,0],[3,1],[3,2],[3,3]], [[3,1],[3,2],[3,3],[3,4]], [[3,2],[3,3],[3,4],[3,5]], [[3,3],[3,4],[3,5],[3,6]], 
    [[4,0],[4,1],[4,2],[4,3]], [[4,1],[4,2],[4,3],[4,4]], [[4,2],[4,3],[4,4],[4,5]], [[4,3],[4,4],[4,5],[4,6]], 
    [[5,0],[5,1],[5,2],[5,3]], [[5,1],[5,2],[5,3],[5,4]], [[5,2],[5,3],[5,4],[5,5]], [[5,3],[5,4],[5,5],[5,6]], 
    [[6,0],[6,1],[6,2],[6,3]], [[6,1],[6,2],[6,3],[6,4]], [[6,2],[6,3],[6,4],[6,5]], [[6,3],[6,4],[6,5],[6,6]], 
    [[7,0],[7,1],[7,2],[7,3]], [[7,1],[7,2],[7,3],[7,4]], [[7,2],[7,3],[7,4],[7,5]], [[7,3],[7,4],[7,5],[7,6]], 
    /* in same row */
    [[0,0],[1,0],[2,0],[3,0]], [[1,0],[2,0],[3,0],[4,0]], [[2,0],[3,0],[4,0],[5,0]], [[3,0],[4,0],[5,0],[6,0]], [[4,0],[5,0],[6,0],[7,0]],
    [[0,1],[1,1],[2,1],[3,1]], [[1,1],[2,1],[3,1],[4,1]], [[2,1],[3,1],[4,1],[5,1]], [[3,1],[4,1],[5,1],[6,1]], [[4,1],[5,1],[6,1],[7,1]],
    [[0,2],[1,2],[2,2],[3,2]], [[1,2],[2,2],[3,2],[4,2]], [[2,2],[3,2],[4,2],[5,2]], [[3,2],[4,2],[5,2],[6,2]], [[4,2],[5,2],[6,2],[7,2]],
    [[0,3],[1,3],[2,3],[3,3]], [[1,3],[2,3],[3,3],[4,3]], [[2,3],[3,3],[4,3],[5,3]], [[3,3],[4,3],[5,3],[6,3]], [[4,3],[5,3],[6,3],[7,3]],
    [[0,4],[1,4],[2,4],[3,4]], [[1,4],[2,4],[3,4],[4,4]], [[2,4],[3,4],[4,4],[5,4]], [[3,4],[4,4],[5,4],[6,4]], [[4,4],[5,4],[6,4],[7,4]],
    [[0,5],[1,5],[2,5],[3,5]], [[1,5],[2,5],[3,5],[4,5]], [[2,5],[3,5],[4,5],[5,5]], [[3,5],[4,5],[5,5],[6,5]], [[4,5],[5,5],[6,5],[7,5]], 
    /* in \-type */
    [[0,0],[1,1],[2,2],[3,3]], [[0,1],[1,2],[2,3],[3,4]], [[0,2],[1,3],[2,4],[3,5]], 
    [[1,0],[2,1],[3,2],[4,3]], [[1,1],[2,2],[3,3],[4,4]], [[1,2],[2,3],[3,4],[4,5]], 
    [[2,0],[3,1],[4,2],[5,3]], [[2,1],[3,2],[4,3],[5,4]], [[2,2],[3,3],[4,4],[5,5]], 
    [[3,0],[4,1],[5,2],[6,3]], [[3,1],[4,2],[5,3],[6,4]], [[3,2],[4,3],[5,4],[6,5]], 
    [[4,0],[5,1],[6,2],[7,3]], [[4,1],[5,2],[6,3],[7,4]], [[4,2],[5,3],[6,4],[7,5]], 
    /* in /-type */
    [[7,0],[6,1],[5,2],[4,3]], [[7,1],[6,2],[5,3],[4,4]], [[7,2],[6,3],[5,4],[4,5]], 
    [[6,0],[5,1],[4,2],[3,3]], [[6,1],[5,2],[4,3],[3,4]], [[6,2],[5,3],[4,4],[3,5]], 
    [[5,0],[4,1],[3,2],[2,3]], [[5,1],[4,2],[3,3],[2,4]], [[5,2],[4,3],[3,4],[2,5]], 
    [[4,0],[3,1],[2,2],[1,3]], [[4,1],[3,2],[2,3],[1,4]], [[4,2],[3,3],[2,4],[1,5]], 
    [[3,0],[2,1],[1,2],[0,3]], [[3,1],[2,2],[1,3],[0,4]], [[3,2],[2,3],[1,4],[0,5]], 
            ]
            
            let in_a_line = false
            bingo.forEach((match)=>{
                const [[col_1, row_1], [col_2, row_2], [col_3, row_3], [col_4, row_4]] = match
                if (game.board[col_1][row_1] === 'e' || 
                    game.board[col_2][row_2] === 'e' ||
                    game.board[col_3][row_3] === 'e' ||
                    game.board[col_4][row_4] === 'e' ){
                    }
                else if (
                    game.board[col_1][row_1] === game.board[col_2][row_2] &&
                    game.board[col_1][row_1] === game.board[col_3][row_3] &&
                    game.board[col_1][row_1] === game.board[col_4][row_4] &&
                    game.board[col_1][row_1] !== 'e'
                ){
                    in_a_line = true
                }
                else {
                }
            })
            if (in_a_line){
                const winner = turn
                game.turn = 'end'
                return ['end', game, winner]
            }
            /* check if full and change turns */
            let full = true
            console.log(game.board)
            for (var i=0; i<8; i++){
                if (game.board[i][0] === 'e'){
                    full = false
                    break
                }
            }
            if (!full) {
                game.turn = (turn === 'w')? 'b': 'w';
                return game
            }
            else {
                game.turn = 'end'
                return ['end', game, 'tie']
            }
        }
    }
}